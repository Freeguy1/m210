#!/usr/bin/python
# -*- coding: utf-8 -*-

# m210
# Copyright © 2010 Tuomas Räsänen (tuos) <tuos@codegrove.org>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from __future__ import absolute_import
from __future__ import print_function
from __future__ import division

# Standard modules.
import sys

# Third-party modules.
import dbus.exceptions

# Project modules.
import m210.client
import m210.optparse

USAGE = '%prog [OPTION]... [DEVPATH]...'
DESCRIPTION = 'Print information about plugged devices.'

if __name__ == "__main__":
    parser = m210.optparse.OptionParser(usage=USAGE, description=DESCRIPTION)

    parser.add_option("--all", "", action="store_true",
                      help="print info about all plugged devices")

    options, args = parser.parse_args(sys.argv)

    daemon = m210.client.get_interface_or_exit()

    if options.all:
        devpaths = [devpath for (devpath, connected) in daemon.devpaths()]
    else:        
        devpaths = args[1:]
        if not devpaths:
            devpaths = [daemon.devpaths()[-1][0]]

    for devpath in devpaths:
        print("Device directory:", devpath)
        try:
            firmware, analog, pad, mode, bytes = daemon.get_info(devpath)
        except dbus.exceptions.DBusException, e:
            name = e.get_dbus_name()
            if name == "org.freedesktop.DBus.Python.m210.daemon.NotConnectedError":
                continue
            raise e
        print("Firmware version:", firmware)
        print("Analog version:  ", analog)
        print("Pad version:     ", pad)
        print("Mode:            ", mode)
        print("Used memory:     ", bytes)
