#!/usr/bin/env python
# -*- coding: utf-8 -*-
# m210 - Python bindings for libm210
# Copyright © 2011 Tuomas Jorma Juhani Räsänen <tuomasjjrasanen@tjjr.fi>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse

import m210

def parse_args():
    parser = argparse.ArgumentParser(description=m210.DESCRIPTION,
                                     version=m210.VERSION)
    subparsers = parser.add_subparsers(title="commands")

    info_parser = subparsers.add_parser("info",
                                        help="show device information")
    info_parser.set_defaults(func=m210.info)

    dump_parser = subparsers.add_parser("dump",
                                        help="dump stored notes as a "
                                        "binary stream")
    dump_parser.add_argument('--output-file', metavar="FILE",
                             default=m210.OUTPUT_FILE_DEFAULT,
                             type=argparse.FileType("w"),
                             help="file where notes will be written to, "
                             "defaults to standard output")
    dump_parser.set_defaults(func=m210.dump)
    
    convert_parser = subparsers.add_parser("convert",
                                           help="convert binary streamed notes "
                                           "to other format")
    convert_parser.add_argument("--input-file", metavar="FILE",
                                default=m210.INPUT_FILE_DEFAULT, type=open,
                                help="file where notes will be read from, "
                                "defaults to standard input")
    convert_parser.add_argument("--output-format",
                                choices=[m210.OUTPUT_FORMAT_DEFAULT],
                                default=m210.OUTPUT_FORMAT_DEFAULT,
                                help="format of the output files")
    convert_parser.add_argument("--overwrite", action="store_true",
                                help="overwrite existing files")
    convert_parser.add_argument("--output-dir", metavar="DIR",
                                default=m210.OUTPUT_DIR_DEFAULT,
                                help="directory where files will be written to,"
                                " defaults to `%s'" % m210.OUTPUT_DIR_DEFAULT)
    convert_parser.set_defaults(func=m210.convert)

    return parser.parse_args()

def main():
    args = parse_args()
    func_args = vars(args)
    func = func_args.pop("func")
    func(**func_args)


if __name__ == "__main__":
    main()
